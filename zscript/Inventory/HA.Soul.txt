// Soul
class HA_Soul : Ammo
{
	void SoulToAmount(bool FirstPickup = false)
	{
		int Souls = owner.CountInv("HA_Soul");
		if (!FirstPickup) Souls += 1;
		
		owner.A_SetInventory("HA_AllySpawner", Souls);
	}

	override bool HandlePickup (Inventory item)
	{
		if (item.GetClass() == "HA_Soul")
		{
			if (owner)
			{
				SoultoAmount();
			}
		}
		return Super.HandlePickup (item);
	}

	override void AttachToOwner (actor other)
	{
		Super.AttachToOwner(other);
		if (owner)
		{
			SoulToAmount(true);
		}
	}

	void Attract()
	{
		if (target)
		{
			bSEEKERMISSILE = TRUE;
			tracer = target;
			A_Tracer2(TracerAng);
			
			Vel.Z = (target.pos.Z + target.Height/2 - pos.Z) / DistanceBySpeed(target, 3);
		}
	}

	bool Attraction;
	int TracerAng;
	override void Tick()
	{
		Super.Tick();
		if (owner)
			return;

		if (GetAge() > (35 * 5))
		{
			if (!target)
			{
				if (LookForPlayers(true))
				{
					//bFLOATBOB = false;
					bNOCLIP = true;
					Attraction = true;
					Angle = AngleTo(target);
				}
			}

			if (target && Attraction)
			{
				Attract();

				// Every 2 seconds to increase the speed
				if (level.time % (35 * 2) == 0)
				{
					Speed += 0.25;
				}

				// Every 5 seconds to increase maximum angle rotation
				if (level.time % (35 * 5) == 0)
				{
					TracerAng += 1;
				}

				Actor mo = Spawn ("SoulBlur", Pos, ALLOW_REPLACE);
				
				if (Distance3D(target) < 35)
				{
					// Make the Player "wiggle" a little bit if they are standing still
					target.vel.xy = (0.01, 0.01);
				}
			}
		}
	}

	Default
	{
		Inventory.PickupMessage "Picked up a soul.";
		Inventory.Amount 1;
		Inventory.MaxAmount 999;
		Ammo.BackpackAmount 1;
		Ammo.BackpackMaxAmount 999;
		Inventory.Icon "EMOMA0";
		Tag "Renewable Soul";
		Scale 1.65;
		RenderStyle "Translucent";
		Alpha 0.65;
		Speed 1;
		+FLOATBOB
		+NOGRAVITY
	}
	States
	{
	Spawn:
		XQXQ A -1;
		Stop;
	}
}

class SoulBlur : Actor
{
	Default
	{
		+NOBLOCKMAP +NOGRAVITY +FLOATBOB
		RenderStyle "Translucent";
		Scale 1.35;
		Alpha 0.1;
	}
	States
	{
	Spawn:
		XQXQ A 16;
		XQXQ A 8 A_SetTranslucent(0.05);
		Stop;
	}
}