// Fighter AI
class HA_Fighter : HA_CoreAI
{
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		ActiveWeapon = "Fist";
		IsMelee = true;
	}

	override void HA_MeleeShoot()
	{
		if (!IsMelee) return;
		if (!CheckMeleeRange()) return;

		if (ActiveWeapon ~== "Fist")
		{
			FLineTraceData lineData;
			LineTrace(angle,100,0, offsetz: height, data: LineData);
			if (LineData.HitType == TRACE_HitActor)
			{
				if (LineData.HitActor is "PlayerPawn")
				{
					return;
				}
			}

			int damage = random[FighterAtk](40, 55);
			FTranslatedLineTarget t;

			double slope = AimLineAttack (angle, 2*DEFMELEERANGE, t, 0, ALF_CHECK3D);
			if (t.linetarget != null)
			{
				Actor puff = LineAttack (angle, 2*DEFMELEERANGE, slope, damage, "FriendlyFire", "PunchPuff", LAF_TARGETISSOURCE, t);
				if (t.linetarget != null && t.linetarget != MyPlayer)
				{
					if (!t.linetarget.bDontThrust)
						t.linetarget.Thrust(2, t.attackAngleFromSource);

					vel.xy = (0,0);
					SetStateLabel("Missile");
				}
			}
		}
	}

	Default
	{
		Species "HexenAlly";
		PainSound "PlayerFighterPain";
		DeathSound "PlayerFighterNormalDeath";
	}
	States
	{
	Spawn:
		PLAY AAA 4;
		Loop;
	See:
		PLAY A 0 A_AlertMonsters(184, AMF_TARGETEMITTER);
		PLAY ABCD 4 A_FollowerChase();
		Loop;
	Missile:
		Goto Melee;
	Melee:
		PLAY E 0 A_AlertMonsters(512, AMF_TARGETEMITTER);
		PLAY E 4 A_AllyDodge();
		PLAY F 17 A_AllyDodge(); //was 8
		PLAY E 2 A_AllyDodge();
		Goto See;
	Pain:
		PLAY G 4;
		PLAY G 4 A_Pain;
		Goto See;
	Death:
		TNT1 A 0
		{
			CountdownToDeath = level.time + 35 * 5;
			AllyDied("Normal");
		}
		PLAY H 6;
		PLAY I 6 A_Scream;
		PLAY JK 6;
		PLAY L 6 A_NoBlocking;
		PLAY M 6;
		PLAY N -1;
		Stop;		
	XDeath:
		TNT1 A 0
		{
			CountdownToDeath = level.time + 35 * 5;
			AllyDied("Crispy");
		}
		PLAY O 5 A_Scream;
		PLAY P 5 A_SkullPop("BloodyFighterSkull");
		PLAY R 5 A_NoBlocking;
		PLAY STUV 5;
		PLAY W -1;
		Stop;
	Ice:
		TNT1 A 0 AllyDied("Ice");
		PLAY X 5 A_FreezeDeath;
		PLAY X 1 A_FreezeDeathChunks;
		Wait;
	Burn:
		TNT1 A 0 AllyDied("Burn");
		FDTH A 5 BRIGHT A_StartSound("*burndeath");
		FDTH B 4 BRIGHT;
		FDTH G 5 BRIGHT;
		FDTH H 4 BRIGHT A_Scream;
		FDTH I 5 BRIGHT;
		FDTH J 4 BRIGHT;
		FDTH K 5 BRIGHT;
		FDTH L 4 BRIGHT;
		FDTH M 5 BRIGHT;
		FDTH N 4 BRIGHT;
		FDTH O 5 BRIGHT;
		FDTH P 4 BRIGHT;
		FDTH Q 5 BRIGHT;
		FDTH R 4 BRIGHT;
		FDTH S 5 BRIGHT A_NoBlocking;
		FDTH T 4 BRIGHT;
		FDTH U 5 BRIGHT;
		FDTH V 4 BRIGHT;
		ACLO E 35 A_CheckPlayerDone;
		Wait;
		ACLO E 8;
		Stop;	
	
	}
}
