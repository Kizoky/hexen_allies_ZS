// Cleric AI
class HA_Cleric : HA_CoreAI
{
	override void HA_PostBeginPlay()
	{
		ActiveWeapon = "Mace";
		IsMelee = true;
		IsRanged = false;
	}

	override void HA_MeleeShoot()
	{
		if (!(ActiveWeapon ~== "Flame") && !(ActiveWeapon ~== "Wraith"))
			if (!IsMelee) return;

		if (!CheckMeleeRange() && !IsRanged) return;
		angle = AngleTo(target);

		// ================================= Mace of Contrition
		if (ActiveWeapon ~== "Mace")
		{
			FTranslatedLineTarget t;

			int damage = random[MaceAtk](25, 40);
			for (int i = 0; i < 16; i++)
			{
				for (int j = 1; j >= -1; j -= 2)
				{
					double ang = angle + j*i*(45. / 16);
					double slope = AimLineAttack(ang, 2 * DEFMELEERANGE, t, 0., ALF_CHECK3D);
					if (t.linetarget)
					{
						LineAttack(ang, 2 * DEFMELEERANGE, slope, damage, 'Melee', "HammerPuff", true, t);
						if (t.linetarget != null)
						{
							AdjustPlayerAngle(t);
							SetStateLabel("Melee");
							vel.xy = (0,0);
							return;
						}
					}
				}
			}

			// didn't find any creatures, so try to strike any walls
			double slope = AimLineAttack (angle, DEFMELEERANGE, null, 0., ALF_CHECK3D);
			LineAttack (angle, DEFMELEERANGE, slope, damage, 'Melee', "HammerPuff");
			SetStateLabel("Melee");
			vel.xy = (0,0);
		}

		// ================================= Serpent Staff
		if (ActiveWeapon ~== "Staff")
		{
			FTranslatedLineTarget t;

			int damage = random[StaffCheck](20, 35);
			int max = 100;
			for (int i = 0; i < 3; i++)
			{
				for (int j = 1; j >= -1; j -= 2)
				{
					double ang = angle + j*i*(45. / 16);
					double slope = AimLineAttack(ang, 1.5 * DEFMELEERANGE, t, 0., ALF_CHECK3D);
					if (t.linetarget)
					{
						LineAttack(ang, 1.5 * DEFMELEERANGE, slope, damage, 'Melee', "CStaffPuff", false, t);
						if (t.linetarget != null)
						{
							angle = t.angleFromSource;
							if (t.linetarget.bIsMonster && (!t.linetarget.bDormant && !t.linetarget.bInvulnerable) &&
							t.linetarget != MyPlayer && !t.linetarget.bFRIENDLY && !(t.linetarget is "HA_CoreAI"))
							{
								int newLife = health + (damage >> 3);
								newLife = newLife > max ? max : newLife;
								if (newLife > health)
								{
									health = health = newLife;
								}
							}
						}
						SetStateLabel("Melee");
						vel.xy = (0,0);
						return;
					}
				}
			}

			// didn't find any targets in meleerange, so set to throw out missile attack
			if (random[chanceshoot]() > 160 && 
				!(InStateSequence(CurState, ResolveState("Missile"))) && 
				CheckLOF(0, 0, 0, 0, 0, 0, 0, AAPTR_TARGET, 0) )
			{
				Actor mo = SpawnPlayerMissile ("CStaffMissile", angle - 3.0);
				if (mo)
				{
					mo.WeaveIndexXY = 32;
				}
				mo = SpawnPlayerMissile ("CStaffMissile", angle + 3.0);
				if (mo)
				{
					mo.WeaveIndexXY = 0;
				}
				A_StartSound ("ClericCStaffFire", CHAN_BODY);

				vel.xy = (0,0);
				SetStateLabel("Missile");
			}
		}

		// ================================= Firestorm
		if (ActiveWeapon ~== "Flame")
		{
			if (random[chanceshoot]() > 215 && 
				!(InStateSequence(CurState, ResolveState("Missile"))) && 
				CheckLOF(0, 0, 0, 0, 0, 0, 0, AAPTR_TARGET, 0) )
			{
				SpawnPlayerMissile ("CFlameMissile");
				A_StartSound ("ClericFlameFire", CHAN_BODY);

				vel.xy = (0,0);
				SetStateLabel("Missile");
			}
		}

		// ================================= Wraithverge
		if (ActiveWeapon ~== "Wraith")
		{
			if (random[chanceshoot]() > 215 && 
				!(InStateSequence(CurState, ResolveState("Missile"))) && 
				CheckLOF(0, 0, 0, 0, 0, 0, 0, AAPTR_TARGET, 0) )
			{
				FTranslatedLineTarget t;

				Actor missile = SpawnPlayerMissile ("HolyMissile", angle, pLineTarget:t);
				if (missile != null && !t.unlinked)
				{
					missile.tracer = t.linetarget;
				}

				A_StartSound ("HolySymbolFire", CHAN_BODY);
				vel.xy = (0,0);
				SetStateLabel("Missile");
			}
		}
	}

	Default
	{
		Species "HexenAlly";
		PainSound "PlayerClericPain";
		DeathSound "PlayerClericNormalDeath";
	}
	States
	{
	Spawn:
		CLER AAA 4;
		Loop;
	See:
		CLER A 0 A_AlertMonsters(184, AMF_TARGETEMITTER);
		CLER ABCD 4 A_FollowerChase();
		Loop;
	Missile:
		Goto Melee;
	Melee:
		CLER E 0 A_AlertMonsters(512, AMF_TARGETEMITTER);
		CLER EF 4 A_AllyDodge();
		CLER G 17 A_AllyDodge(); //was 8
		CLER FE 2 A_AllyDodge();
		Goto See;
	Pain:
		CLER H 4;
		CLER H 4 A_Pain;
		Goto See;
	Death:
		CLER I 6;
		CLER J 6 A_Scream;
		CLER KL 6;
		CLER M 6 A_NoBlocking;
		CLER NOP 6;
		CLER Q -1;
		Stop;		
	XDeath:
		CLER R 5 A_Scream;
		CLER S 5;
		CLER T 5 A_NoBlocking;
		CLER UVWXYZ 5;
		CLER [ -1;
		Stop;
	Ice:
		CLER \ 5 A_FreezeDeath;
		CLER \ 1 A_FreezeDeathChunks;
		Wait;
	Burn:
		FDTH A 5 BRIGHT A_StartSound("*burndeath");
		FDTH B 4 BRIGHT;
		FDTH G 5 BRIGHT;
		FDTH H 4 BRIGHT A_Scream;
		FDTH I 5 BRIGHT;
		FDTH J 4 BRIGHT;
		FDTH K 5 BRIGHT;
		FDTH L 4 BRIGHT;
		FDTH M 5 BRIGHT;
		FDTH N 4 BRIGHT;
		FDTH O 5 BRIGHT;
		FDTH P 4 BRIGHT;
		FDTH Q 5 BRIGHT;
		FDTH R 4 BRIGHT;
		FDTH S 5 BRIGHT A_NoBlocking;
		FDTH T 4 BRIGHT;
		FDTH U 5 BRIGHT;
		FDTH V 4 BRIGHT;
		ACLO E 35 A_CheckPlayerDone;
		Wait;
		ACLO E 8;
		Stop;	
	
	}
}
