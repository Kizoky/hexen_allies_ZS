class HexenAlliesCoreHandler : EventHandler 
{
	Array<Actor> Allies;

	override void WorldTick()
	{
		let player = players[consoleplayer].mo;
	}

	override void NetworkProcess (ConsoleEvent e)
	{
		//
	}
   
	override void PlayerEntered (PlayerEvent e)
	{
		PlayerPawn n = PlayerPawn(players[e.PlayerNumber].mo);
	}
   
	override void WorldThingSpawned (Worldevent e)
	{
		let SpawnedThing = e.Thing;
		if (SpawnedThing is "HA_CoreAI")
		{
			Allies.Push(SpawnedThing);
		}
	}
	
	override void WorldUnloaded (WorldEvent e)
	{
		//let player = players[consoleplayer].mo;
		for (uint i = 0; i < Allies.size(); ++i)
		{
			if (Allies[i] && !Allies[i].bKILLED)
			{
				Allies[i].Destroy();
			}
		}
	}

	override void WorldLoaded (WorldEvent e)
	{
		let player = players[consoleplayer].mo;
		let HubStuff = player.FindInventory("HA_AIHub");
		let Inven = HA_AIHub(HubStuff);
		if (Inven)
		{
			Inven.RestoreAlly();
		}
	}

	override void WorldThingDied(WorldEvent e)
	{	
		if (e.Thing)
		{
			if (e.Thing is 'HA_CoreAI')
			{
				let player = players[consoleplayer].mo;
				let HubStuff = player.FindInventory("HA_AIHub");
				let Inven = HA_AIHub(HubStuff);
				if (Inven)
				{
					Inven.RemoveAlly(e.Thing);
				}
			}

			let player = players[consoleplayer].mo;
			/*
			if (player && e.Thing && e.Thing != Player)
			{
				if (e.Thing.Target && (e.Thing.target is "PlayerPawn" || e.Thing.Target is "HA_CoreAI" || e.Thing.Target.bFRIENDLY))
				{
					//
				}
			}
			*/
		}
		
	}
}